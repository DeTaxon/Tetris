


TetrisWindow := class extend Window
{
	playField := PlayField
	
	InitWindow := virtual !() -> GUIObject^
	{
		playField.base = this&
		playField.SetField(10,20)

		playField.CurrentShape&->{int^}^ = RandInt(1..8)
		playField.CurrentShapePos.0 = 4 

		TSpawnTask(() ==> {
			Phys()
		})

		return new LayoutHorizontal(![
			new LayoutSpacer("",0),
			new LayoutVertical(![
				new LayoutSpacer("",0),
				playField&,
				new LayoutSpacer("",0),
			]),
			new LayoutSpacer("",0),
		])
	}

	KeyChangedChar := virtual !(int key, bool pressed) -> void
	{
		if playField.KeyChangedChar(key,pressed)
			RedrawWindow()
	}
	Phys := !() -> void
	{
		while true
		{
			playField.PhysTick()
			RedrawWindow()
			TSleep(0.6)
		}
	}
}

main := !(char^[] args) -> int
{
	InitTable()
	win := TetrisWindow(400,400,"Tetris")
	win.ClearColor = vec4f(1.0,0.5,0.0,1.0)

	win.Run()
	return 0
}




TetrisWindow := class extend Window
{
	playField := PlayField

	secretImage := TVkTexture^ 
	soundEngine := SoundEngine^

	backgroundMusic := Sound^
	
	InitWindow := virtual !() -> GUIObject^
	{
		soundEngine = new SoundEngine()
		backgroundMusic = soundEngine.CreateSound(FSGetFile("Tetris.wav"))
		soundEngine.PlaySoundLooped(backgroundMusic)
		playField.sEng = soundEngine
		playField.ToastySound = soundEngine.CreateSound(FSGetFile("Toasty.wav"))

		mnstr := #File("Monster1.webp")
		mImg := new ImageFile(mnstr)
		mImg2 := mImg.CreateImage("RGBA")

		secretImage = vInstance.CreateTexture()
		secretImage.CreateTexture(512,512,ArraySpan.{u8}(mImg2.GetPointer(),512*512*4))

		playField.secretTexture = secretImage

		playField.base = this&
		playField.SetField(10,25)

		playField.CurrentShape&->{int^}^ = RandInt(1..8)
		playField.CurrentShapePos.0 = 4 

		TSpawnTask(() ==> {
			Phys()
		})
		TSpawnTask(() ==> {
			prevTime := GetSteadyTime()
			while true
			{
				nowTime := GetSteadyTime()
				playField.Step(nowTime - prevTime)
				prevTime = nowTime
				RedrawWindow()
				TSleep(1 / 60)
			}
		})
		TSpawnTask(() ==> {
			while true
			{
				TSleep(4)
				playField.StartMonster()
			}
		})

		return new LayoutHorizontal(![
			new LayoutSpacer("",0),
			new LayoutVertical(![
				new LayoutSpacer("",0),
				playField&,
				new LayoutSpacer("",0),
			]),
			new LayoutSpacer("",0),
		])
	}

	KeyChangedChar := virtual !(int key, bool pressed) -> void
	{
		if playField.KeyChangedChar(key,pressed)
			RedrawWindow()
	}
	Phys := !() -> void
	{
		while true
		{
			playField.PhysTick()
			RedrawWindow()
			playField.GliderStep()
			TSleep(0.3)
			playField.GliderStep()
			TSleep(0.3)
		}
	}
}

main := !(char^[] args) -> int
{
	InitTable()
	win := TetrisWindow(400,470,"Tetris")
	win.ClearColor = vec4f(1.0,0.5,0.0,1.0)
	win.Run()
	return 0
}

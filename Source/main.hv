


TetrisWindow := class extend Window
{
	playField := PlayField

	//secretImage := TVkTexture^ 
	soundEngine := SoundEngine^

	backgroundMusic := Sound^

	fieldTask := Task^
	mnstrTask := Task^

	physTask := Task^
	physQuit := bool

	InitWindow := virtual !() -> GUIObject^
	{
		ExpectWorkers(4)

		//soundEngine = new SoundEngine()
		//soundEngine.ReserveSources(5)
		////soundEngine.CreateTask()
		//backgroundMusic = soundEngine.CreateSound(FSGetFile("Tetris.wav"))
		//soundEngine.PlaySoundLooped(backgroundMusic)
		//playField.sEng = soundEngine
		//playField.ToastySound = soundEngine.CreateSound(FSGetFile("Toasty.wav"))

		playField.base = this&
		playField.SetField(10,25)

		playField.CurrentShape&->{int^}^ = RandInt(1..8)
		playField.CurrentShapePos.0 = 4 

		SpawnWork(() ==> [c = this&]{
			c.physTask = TSpawnTask(() ==> {
				Phys()
			})
		})
		physTask = TSpawnTask(() ==> {
			prevTime := GetSteadyTime()
			while not physQuit
			{
				nowTime := GetSteadyTime()
				playField.Step(nowTime - prevTime)
				prevTime = nowTime
				//RedrawWindow()
				TSleep(1 / 60)
			}
		})
		mnstrTask = TSpawnTask(() ==> {
			//TSleep(3)
			while not physQuit
			{
				//TSleep(RandInt(9..30))
				TSleep(1)
				playField.StartMonster()
				//TSleep(0.5)
				//playField.SpawnGlider()
			}
		})

		return new LayoutHorizontal(![
			new LayoutSpacer("",0),
			new LayoutVertical(![
				new LayoutSpacer("",0),
				playField&,
				new LayoutSpacer("",0),
			]),
			new LayoutSpacer("",0),
		])
	}

	InitGL := virtual !(WindowGLContext^ ctx) -> bool
	{
		//if not super()
		//	return false
		return playField.InitGL(ctx)
	}

	KeyChangedChar := virtual !(int key, bool pressed) -> void
	{
		if playField.KeyChangedChar(key,pressed)
			RedrawWindow()
	}
	Phys := !() -> void
	{
		while not physQuit
		{
			playField.PhysTick()
			RedrawWindow()
			playField.GliderStep()
			TSleep(0.3)
			playField.GliderStep()
			TSleep(0.3)
		}
	}
	Stop := !() -> void
	{
		soundEngine?.Stop()
	}
}

main := !(char^[] args) -> int
{
	InitTable()
	win := TetrisWindow(400,470,"Tetris")
	win.ClearColor = vec4f(1.0,0.5,0.0,1.0)
	win.RunGL()
	win.Stop()

	win.physQuit = true
	win.fieldTask?.AwaitCompletion()
	win.physTask.AwaitCompletion()
	win.mnstrTask?.AwaitCompletion()

	return 0
}
